## -*- encoding: utf-8 -*-
## This file (TFG-Casimir.sagetex.sage) was *autogenerated* from TFG-Casimir.tex with sagetex.sty version 2020/08/12 v3.5.
import sagetex
_st_ = sagetex.SageTeXProcessor('TFG-Casimir', version='2020/08/12 v3.5', version_check=True)
_st_.current_tex_line = 326
_st_.blockbegin()
try:
 load("formulacio_matriu_dinamica.sage")
except:
 _st_.goboom(328)
_st_.blockend()
try:
 _st_.current_tex_line = 331
 _st_.inline(0, latex(a_1))
except:
 _st_.goboom(331)
try:
 _st_.current_tex_line = 331
 _st_.inline(1, latex(a_2))
except:
 _st_.goboom(331)
try:
 _st_.current_tex_line = 334
 _st_.inline(2, latex(arccos(a_1*a_2/(norm(a_1)*norm(a_2)).simplify())))
except:
 _st_.goboom(334)
try:
 _st_.current_tex_line = 341
 _st_.inline(3, latex(r_B))
except:
 _st_.goboom(341)
try:
 _st_.current_tex_line = 341
 _st_.inline(4, latex(r_N))
except:
 _st_.goboom(341)
try:
 _st_.current_tex_line = 341
 _st_.inline(3, latex(r_B))
except:
 _st_.goboom(341)
try:
 _st_.current_tex_line = 341
 _st_.inline(4, latex(r_N))
except:
 _st_.goboom(341)
try:
 _st_.current_tex_line = 348
 _st_.plot(0, format='notprovided', _p_=xarxa, figsize=3)
except:
 _st_.goboom(348)
try:
 _st_.current_tex_line = 353
 _st_.plot(1, format='notprovided', _p_=cela, figsize=3)
except:
 _st_.goboom(353)
try:
 _st_.current_tex_line = 358
 _st_.plot(2, format='notprovided', _p_=AtomsB+AtomsN, figsize=3)
except:
 _st_.goboom(358)
_st_.current_tex_line = 380
_st_.blockbegin()
try:
 import numpy as np
 import matplotlib.pyplot as plt
 import pybinding as pb
 
 a_1_rec=np.array([1,1/sqrt(3)])
 a_2_rec=np.array([0,2/sqrt(3)])
 
 def R_l_rec(l_1,l_2):
     return 2*np.pi*l_1*a_1_rec+2*np.pi*l_2*a_2_rec
 
 reddenudos=np.array([R_l_rec(l_1,l_2) for l_1 in range(-5, 5) for l_2 in range(-3,4)])
 
 
 x = reddenudos[:,0]
 y = reddenudos[:,1]
 plt.plot(x,y,"o")
 plt.axis('scaled')
 plt.savefig("../Grafiques/Xarxa2pireciproca.jpg")
 plt.close()
 
 #from math import sqrt, pi
 
 pb.pltutils.use_style()
 from pybinding.repository.graphene.constants import a_cc, t
 
 a = 56 / 55 * a_cc  # ratio of lattice constants is 56/55, in [nm] unit cell length
 #t in [eV] hopping energy
 
 vn = -1.4  # [eV] nitrogen onsite potential
 vb = 3.34  # [eV] boron onsite potential
 
 # create a simple 2D lattice with vectors a1 and a2
 lattice = pb.Lattice(a1=[a, 0], a2=[-a/2, np.sqrt(3)*a/2])
 lattice.add_sublattices(
 ('B', [0, np.sqrt(3)*a/3], vb), # add an atom called 'A' at position [0, 0]
 ('N', [a/2,np.sqrt(3)*a/6] ,vn )
 )
 
 lattice.add_hoppings(
         ([ 0,  0], 'B', 'N', t),
         ([ -1, 0], 'B', 'N', t),
         ([0,  1], 'B', 'N', t)
     )
 
 
 lattice.plot()
 lattice.plot_brillouin_zone()
 plt.savefig("../Grafiques/1aBZ.jpg")
 plt.close()
 reset('a')
 var('a', domain='positive')
except:
 _st_.goboom(432)
_st_.blockend()
_st_.current_tex_line = 455
_st_.blockbegin()
try:
 from periodictable import C, B, N, constants
 u=constants.atomic_mass_constant*10**3 #para que este en CGS (y las const. de fuerza en dyn)
 
 omega_Gamma_ZO=830 #cm-1
 omega_Gamma_ZA=0
 
 D_Gamma_zz=D_zz.subs(q_x=0,q_y=0) #,(M_B,B.mass*u),(M_N,N.mass*u)])
 Eq1=(D_Gamma_zz.eigenvalues()[0]==omega**2).subs(omega=omega_Gamma_ZO)
except:
 _st_.goboom(464)
_st_.blockend()
try:
 _st_.current_tex_line = 467
 _st_.inline(5, latex(D_Gamma_zz))
except:
 _st_.goboom(467)
try:
 _st_.current_tex_line = 475
 _st_.inline(6, latex(D_Gamma_zz.eigenvalues()[0]))
except:
 _st_.goboom(475)
try:
 _st_.current_tex_line = 475
 _st_.inline(7, latex(D_Gamma_zz.eigenvalues()[1]))
except:
 _st_.goboom(475)
try:
 _st_.current_tex_line = 475
 _st_.inline(6, latex(D_Gamma_zz.eigenvalues()[0]))
except:
 _st_.goboom(475)
try:
 _st_.current_tex_line = 475
 _st_.inline(7, latex(D_Gamma_zz.eigenvalues()[1]))
except:
 _st_.goboom(475)
_st_.current_tex_line = 480
_st_.blockbegin()
try:
 omega_K_ZO=605 #cm-1
 omega_K_ZA=322
 D_K_zz=D_zz.subs(q_x=4*pi/(3*a),q_y=0)
 Eq1=(D_Gamma_zz.eigenvalues()[0]==omega**2).subs(omega=omega_Gamma_ZO)
 solEq1=solve(Eq1, phi3toBN)
except:
 _st_.goboom(486)
_st_.blockend()
try:
 _st_.current_tex_line = 491
 _st_.inline(8, latex(D_K_zz.eigenvalues()[0]))
except:
 _st_.goboom(491)
try:
 _st_.current_tex_line = 491
 _st_.inline(9, latex(D_K_zz.eigenvalues()[1]))
except:
 _st_.goboom(491)
try:
 _st_.current_tex_line = 491
 _st_.inline(8, latex(D_K_zz.eigenvalues()[0]))
except:
 _st_.goboom(491)
try:
 _st_.current_tex_line = 491
 _st_.inline(9, latex(D_K_zz.eigenvalues()[1]))
except:
 _st_.goboom(491)
_st_.current_tex_line = 496
_st_.blockbegin()
try:
 sol=[]
 Eq2=(D_K_zz.eigenvalues()[0]==omega**2).subs(omega=omega_K_ZO)
 Eq3=(D_K_zz.eigenvalues()[1]==omega**2).subs(omega=omega_K_ZA)
 sol.append(solve(Eq2.subs(solEq1),phi2toNN)[0])
 sol.append(solve(Eq3.subs(solEq1),phi2toBB)[0])
except:
 _st_.goboom(502)
_st_.blockend()
_st_.current_tex_line = 506
_st_.blockbegin()
try:
 omega_M_ZO=635 #cm-1
 omega_M_ZA=314
 
 D_M_zz=D_zz.subs(q_x=pi/a,q_y=pi/(sqrt(3)*a))
 #D_M_zz.eigenvalues()
 #Podemos simplificar un poco la expresi√≥n obtenida para los valores propios en el punto  ùëÄ  (simplemente reescribiendo el argumento de la raiz cuadrada)
 
 omegaM1cuadrado=-4*phi2toBB/M_B-4*phi2toNN/M_N-3/sqrt(M_B*M_N)*(phi1toBN+phi3toBN)-sqrt(M_B*M_N*(phi1toBN-3*phi3toBN)^2+(4*(M_N*phi2toBB-M_B*phi2toNN))^2)/(M_B*M_N)
 
 #if bool(D_M_zz.eigenvalues()[0]==omegaM1cuadrado):
 #    show(omegaM1cuadrado)
 
 omegaM2cuadrado=-4*phi2toBB/M_B-4*phi2toNN/M_N-3/sqrt(M_B*M_N)*(phi1toBN+phi3toBN)+sqrt(M_B*M_N*(phi1toBN-3*phi3toBN)^2+(4*(M_N*phi2toBB-M_B*phi2toNN))^2)/(M_B*M_N)
 
 #if bool(D_M_zz.eigenvalues()[1]==omegaM2cuadrado):
 #    show(omegaM2cuadrado)
except:
 _st_.goboom(523)
_st_.blockend()
try:
 _st_.current_tex_line = 529
 _st_.inline(10, latex(omegaM1cuadrado))
except:
 _st_.goboom(529)
try:
 _st_.current_tex_line = 529
 _st_.inline(11, latex(omegaM2cuadrado))
except:
 _st_.goboom(529)
try:
 _st_.current_tex_line = 529
 _st_.inline(10, latex(omegaM1cuadrado))
except:
 _st_.goboom(529)
try:
 _st_.current_tex_line = 529
 _st_.inline(11, latex(omegaM2cuadrado))
except:
 _st_.goboom(529)
_st_.current_tex_line = 534
_st_.blockbegin()
try:
 Eq5=(omegaM1cuadrado==omega_M_ZO**2)
 Eq6=(omegaM2cuadrado==omega_M_ZA**2)
 
 sol1=(phi1toBN==n(solve(((Eq6-Eq5)**2).subs(solEq1), phi1toBN)[0].subs(sol[0], sol[1]).subs(M_B=B.mass, M_N=N.mass).rhs()))
 
 sol2=sol[0].subs(M_N=N.mass)
 
 sol3=sol[1].subs(M_B=B.mass)
 
 sol4=solEq1[0].subs(M_B=B.mass, M_N=N.mass).subs(sol1)
 
except:
 _st_.goboom(546)
_st_.blockend()
try:
 _st_.current_tex_line = 553
 _st_.inline(12, latex(sol1))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(13, latex(sol2))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(14, latex(sol3))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(15, latex(sol4))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(12, latex(sol1))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(13, latex(sol2))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(14, latex(sol3))
except:
 _st_.goboom(553)
try:
 _st_.current_tex_line = 553
 _st_.inline(15, latex(sol4))
except:
 _st_.goboom(553)
_st_.current_tex_line = 558
_st_.blockbegin()
try:
 from pylab import loadtxt
 #data = pd.read_csv('../Dades/freq.dat', header = None)
 dades=loadtxt("../Dades/freq.dat")
 ZAZO=\
 list_plot(
     [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
         M_N=N.mass, a=1, q_x=n(x*pi), q_y=n(x*pi/sqrt(3))).simplify_full().eigenvalues()[1]))) \
         for x in srange(0,1,0.1)] +\
          [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
 M_N=N.mass, a=1, q_x=n(pi*(1+x/3)), q_y=n(pi/sqrt(3)*(1-x))).simplify_full().eigenvalues()[1]))) \
         for x in srange(0,1,0.1)]+\
          [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
 M_N=N.mass, a=1, q_x=n(4*pi/3*(1-x)), q_y=0).simplify_full().eigenvalues()[1]))) \
         for x in srange(0,1,0.1)]) + \
 list_plot(
     [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
         M_N=N.mass, a=1, q_x=n(x*pi), q_y=n(x*pi/sqrt(3))).simplify_full().eigenvalues()[0]))) \
         for x in srange(0,1,0.1)]+
           [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
 M_N=N.mass, a=1,q_x=n(pi*(1+x/3)), q_y=n(pi/sqrt(3)*(1-x))).simplify_full().eigenvalues()[0]))) \
         for x in srange(0,1,0.1)]+\
          [real_part(n(sqrt(D_zz.subs(sol1, sol2, sol3, sol4, M_B=B.mass, \
 M_N=N.mass, a=1, q_x=n(4*pi/3*(1-x)), q_y=0).simplify_full().eigenvalues()[0]))) \
         for x in srange(0,1,0.1)]) \
      +line([(10,0),(10,1600)], color="black")+line([(20,0),(20,1600)], color="black")\
      +line([(30,0),(30,1600)], color="black", ticks=[[0.05,10,20,30], None], \
         tick_formatter = [[r'$\Gamma$', '$M$', '$K$', r'$\Gamma$'], None])+\
 points(zip(dades[:524,0]/524*30, dades[:524,1]), color="red") +\
 points(zip(dades[524:1048,0]/524*30, dades[524:1048,1]), color="brown") +\
 points(zip(dades[1048:1572,0]/524*30, dades[1048:1572,1]), color="black") +\
 points(zip(dades[1572:2096,0]/525*30, dades[1572:2096,1]), color="pink") +\
 points(zip(dades[2096:2620,0]/525*30, dades[2096:2620,1]), color="steelblue") +\
 points(zip(dades[2620:3144,0]/525*30, dades[2620:3144,1]), color="blue")
 
except:
 _st_.goboom(593)
_st_.blockend()
try:
 _st_.current_tex_line = 597
 _st_.plot(3, format='notprovided', _p_=ZAZO,figsize=6)
except:
 _st_.goboom(597)
_st_.current_tex_line = 609
_st_.blockbegin()
try:
 D1BN_xy=D1BN.matrix_from_rows_and_columns([0,1],[0,1])
 D1NB_xy=D1NB.matrix_from_rows_and_columns([0,1],[0,1])
 
 D2BB_xy=D2BB.matrix_from_rows_and_columns([0,1],[0,1])
 D2NN_xy=D2NN.matrix_from_rows_and_columns([0,1],[0,1])
 
 D3BN_xy=D3BN.matrix_from_rows_and_columns([0,1],[0,1])
 D3NB_xy=D3NB.matrix_from_rows_and_columns([0,1],[0,1])
 #D4BN_xy=D4BN.matrix_from_rows_and_columns([0,1],[0,1])
 #D4NB_xy=D4NB.matrix_from_rows_and_columns([0,1],[0,1])
 
 D_xy=block_matrix([[D2BB_xy, D1BN_xy+D3BN_xy],[D1NB_xy+D3NB_xy, D2NN_xy]])
except:
 _st_.goboom(622)
_st_.blockend()
_st_.current_tex_line = 627
_st_.blockbegin()
try:
 D_Gamma_xy=D_xy.subs(q_x=0,q_y=0)
except:
 _st_.goboom(629)
_st_.blockend()
try:
 _st_.current_tex_line = 634
 _st_.inline(16, latex(D_Gamma_xy.eigenvalues()[0]))
except:
 _st_.goboom(634)
try:
 _st_.current_tex_line = 634
 _st_.inline(17, latex(D_Gamma_xy.eigenvalues()[3]))
except:
 _st_.goboom(634)
try:
 _st_.current_tex_line = 634
 _st_.inline(16, latex(D_Gamma_xy.eigenvalues()[0]))
except:
 _st_.goboom(634)
try:
 _st_.current_tex_line = 634
 _st_.inline(17, latex(D_Gamma_xy.eigenvalues()[3]))
except:
 _st_.goboom(634)
_st_.current_tex_line = 649
_st_.blockbegin()
try:
 D_M_xy=D_xy.subs(q_x=pi/a,q_y=pi/(sqrt(3)*a), phi2rNN=phi2rBB,phi2tiNN=phi2tiBB, M_N=M_B)
except:
 _st_.goboom(651)
_st_.blockend()
try:
 _st_.current_tex_line = 658
 _st_.inline(18, latex(D_M_xy.eigenvalues()[0]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(19, latex(D_M_xy.eigenvalues()[1]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(20, latex(D_M_xy.eigenvalues()[2]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(21, latex(D_M_xy.eigenvalues()[3]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(18, latex(D_M_xy.eigenvalues()[0]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(19, latex(D_M_xy.eigenvalues()[1]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(20, latex(D_M_xy.eigenvalues()[2]))
except:
 _st_.goboom(658)
try:
 _st_.current_tex_line = 658
 _st_.inline(21, latex(D_M_xy.eigenvalues()[3]))
except:
 _st_.goboom(658)
_st_.current_tex_line = 666
_st_.blockbegin()
try:
 D_K_xy=D_xy.subs(q_x=4*pi/(3*a),q_y=0, phi2rNN=phi2rBB,phi2tiNN=phi2tiBB, M_N=M_B)
except:
 _st_.goboom(667)
_st_.blockend()
try:
 _st_.current_tex_line = 673
 _st_.inline(22, latex(D_K_xy.eigenvalues()[0]))
except:
 _st_.goboom(673)
try:
 _st_.current_tex_line = 673
 _st_.inline(23, latex(D_K_xy.eigenvalues()[1]))
except:
 _st_.goboom(673)
try:
 _st_.current_tex_line = 673
 _st_.inline(24, latex(D_K_xy.eigenvalues()[2]))
except:
 _st_.goboom(673)
try:
 _st_.current_tex_line = 673
 _st_.inline(22, latex(D_K_xy.eigenvalues()[0]))
except:
 _st_.goboom(673)
try:
 _st_.current_tex_line = 673
 _st_.inline(23, latex(D_K_xy.eigenvalues()[1]))
except:
 _st_.goboom(673)
try:
 _st_.current_tex_line = 673
 _st_.inline(24, latex(D_K_xy.eigenvalues()[2]))
except:
 _st_.goboom(673)
_st_.endofdoc()
